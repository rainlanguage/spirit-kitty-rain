/* .flow() expression for minting token after whitelist period */


/* START SOURCE 0 */

sentinel: 0xfea74d0c9bf4a3c28f0dd0674db22a3d7f8bf259c56af19f4ac1e735b156974f,
sentinel721: 0xfe90d819490b07580877ce7c3005704048c62af96c6745886d7e356e0b63924a,

token-addr: context<0 1>(),
sender: context<0 0>(),

/* the token we want to mint */
kitty: context<1 0>(),
litter: context<1 1>(),

token-id: encode-256<8 8>(litter kitty),

start: get(hash(litter 0x1)),

/* 48 hour whitelist */
whitelist-duration: mul(60 60 24 2),

/* is after whitelist period */
: ensure(greater-than(block-timestamp() add(start whitelist-duration))),

/* is valid token id */
: ensure(less-than(kitty 148)),
: ensure(less-than(litter 148)),

/* is not Purebred (use Purebred expression instead) */
: ensure(not(equal-to(kitty litter))),

/* is not soulbound kitty x_00 (use ARHero expression instead) */
: ensure(not(is-zero(kitty))),

/* is not already minted */
: ensure(not(erc-721-owner-of(token-addr token-id))),

/* fetch BTC/USD price */
feed: 0xf4030086522a5beea4988f8ca5b36dbc97bee88c,
/* this pair has 60min heartbeat, so we set at bit more than heartbeat */
stale-after: mul(60 75),
price: chainlink-price(feed stale-after),

/* $300 USD equivalence */
btc-amount: prb-div(300e18 price),

/* flows */
erc1155s: sentinel,
erc721s: sentinel,
erc20s: sentinel,
  /* TODO: transfer BTC */

natives: sentinel,
burns: sentinel721,
mints: sentinel721;
  /* TODO: mint NFT */

/* END SOURCE 0 */
