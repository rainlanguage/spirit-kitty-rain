/* .flow() expression for handling whitelist approvals */


/* START SOURCE 0 */

sentinel: 0xfea74d0c9bf4a3c28f0dd0674db22a3d7f8bf259c56af19f4ac1e735b156974f,
sentinel721: 0xfe90d819490b07580877ce7c3005704048c62af96c6745886d7e356e0b63924a,

token-addr: context<0 1>(),
sender: context<0 0>(),

/* the council kitty corresponds with litter we are managing */
council-kitty: context<1 0>(),

/* 00_x */
leader-id: encode-256<8 8>(0 council-kitty),

/* caller must be Litter Leader, i.e. owns corresponding council soulbound */
: ensure(equal-to(erc-721-owner-of(token-addr leader-id) sender)),

litter: council-kitty,

key-counter: hash(litter 0x0),
approved-counter: get(key-counter),

/* approve each address in context column */
/* <cols-width starting-col source-index>(accumulators) */
/* note that outputs are meaningless, fold-context expects output for every input */
_ _: fold-context<0 1 1>(litter approved-counter),

/* flows */
/* no flows should occur in approval flow, we're just setting store values */
erc-1155-transfers: sentinel,
erc-721-transfers: sentinel,
erc-20-transfers: sentinel,
native-transfers: sentinel,
burns: sentinel721,
mints: sentinel721;

/* END SOURCE 0 */


/* START SOURCE 1 */

litter approved-counter address-to-approve: ,

key-counter: hash(litter 0x0),
key-address: hash(litter 0x1 address-to-approve),

/* an address must not already be approved, revert transaction */
: ensure(not(get(key-address))),
: set(key-address 1),

/* must not approve more than 300 addresses */
: ensure(less-than(approved-counter 300)),
: set(key-counter add(approved-counter 1));

/* END SOURCE 1 */
